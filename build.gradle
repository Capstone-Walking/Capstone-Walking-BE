buildscript {
    ext {
        /** project */
        projectName = 'walking-be'
        projectVersion = '1.0.0'

        /** spring */
        springBootVersion = '2.7.5'
        dependencyManagementVersion = '1.0.15.RELEASE'

        /** kotlin */
        kotlinVersion = '1.5.31'
        ktlintVersion = '11.3.2'

        /** jwt */
        jsonwebtokenVersion = '0.11.5'

        /** jsr305 */
        jsr305Version = '3.0.1'

        /** quartz */
        quartzVersion = '2.3.0'

        /** docs */
        asciidoctorVersion = '3.3.2'
        epagesRestDocsApiSpecVersion = '0.16.4'
        hidetakeSwaggerGeneratorVersion = '2.18.2'
        springDocOpenApiUiVersion = '1.6.9'
        swaggerUIVersion = '4.1.3'

        /** spotless */
        spotlessVersion = '6.8.0'

        /** httpclient */
        httpclientVersion = '4.5.13'

        /** minio */
        minioVersion = '8.5.5'

        /** aws s3 */
        awsS3Version = "1.12.220"

        /** spring cloud */
        set('springCloudVersion', "2021.0.1")
    }
}

plugins {
    /** java */
    id 'java'

    /** kotlin */
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.spring' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.allopen' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.jpa' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.lombok' version "${kotlinVersion}"
    id 'org.jlleitschuh.gradle.ktlint' version "${ktlintVersion}"
    id 'org.jlleitschuh.gradle.ktlint-idea' version "${ktlintVersion}"

    /** spring */
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"

    /** spotless */
    id "com.diffplug.spotless" version "${spotlessVersion}"

    /** docs */
    id 'org.asciidoctor.jvm.convert' version "${asciidoctorVersion}"
    id 'com.epages.restdocs-api-spec' version "${epagesRestDocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version "${hidetakeSwaggerGeneratorVersion}"

    /** test coverage */
    id 'jacoco'
}

group = 'com.walking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "11"
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

/** apply tasks */
apply from: './tasks/formatting-task.gradle'
apply from: './tasks/docs-task.gradle'
apply from: './tasks/install-git-hooks.gradle'

dependencies {
    /** javax */
    implementation 'javax.annotation:javax.annotation-api'
    annotationProcessor("javax.persistence:javax.persistence-api")

    /** kotlin */
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"
    implementation "io.projectreactor.kotlin:reactor-kotlin-extensions"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    /** lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /** spring boot starter */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /** database */
    implementation 'mysql:mysql-connector-java'
    implementation 'org.hibernate:hibernate-spatial'
    implementation 'org.hibernate:hibernate-envers'
    implementation 'org.hibernate.validator:hibernate-validator'

    /** retry */
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'

    /** cache */
    implementation 'com.github.ben-manes.caffeine:caffeine'

    /** webflux */
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'

    /** netty */
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'

    /** jwt */
    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"

    /** apache */
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.httpcomponents:httpcore'
    implementation 'org.apache.httpcomponents:httpclient'

    /** jackson */
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: "${jsr305Version}"

    /** json */
    implementation 'org.json:json:20231013'

    /** quartz */
    implementation "org.quartz-scheduler:quartz:${quartzVersion}"

    /** s3 */
    implementation "io.minio:minio:${minioVersion}"
    implementation "com.amazonaws:aws-java-sdk-s3:${awsS3Version}"

    /** docs */
    implementation "org.springdoc:springdoc-openapi-ui:${springDocOpenApiUiVersion}"
    implementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation "com.epages:restdocs-api-spec-mockmvc:${epagesRestDocsApiSpecVersion}"
    swaggerUI "org.webjars:swagger-ui:${swaggerUIVersion}"
}
